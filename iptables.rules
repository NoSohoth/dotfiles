*filter


##########
# CHAINS #
##########

:INPUT DROP [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:TCP - [0:0]
:UDP - [0:0]


#########################
# BASIC INPUT FILTERING #
#########################

# ESTABLISHED implies another rule previously allowed the initial (--ctstate NEW)
# connection attempt or the connection was already active.
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

# Accept all traffic from the loopback interface.
-A INPUT -i lo -j ACCEPT

# Drop all traffic with an INVALID state match.
-A INPUT -m conntrack --ctstate INVALID -j DROP

# Accept all new incoming ICMP echo requests.
# Since the computer is not a router, no other ICMP traffic with state NEW needs to be allowed.
-A INPUT -p icmp -m icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT

# Log incoming traffic.
#-A INPUT -j LOG --log-level 4 --log-prefix "Input    "


######################
# INPUT -> TCP & UDP #
######################

# Attach the TCP and UDP chains to the INPUT chain to handle all new incoming connections.
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
-A INPUT -p tcp --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j TCP

# Open TCP and UDP ports
## WOL
#-A UDP -p udp -s 192.168.1.0/24 --dport 9 -j ACCEPT
## SSH
#-A TCP -p tcp -s 192.168.1.0/24 --dport 22 -j ACCEPT


############################
# REJECT REMAINING TRAFFIC #
############################

# Log dropped traffic.
#-A INPUT -j LOG --log-level 4 --log-prefix "Dropped  "

# TCP and UDP
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset

# Other protocols
-A INPUT -j REJECT --reject-with icmp-proto-unreachable


COMMIT
